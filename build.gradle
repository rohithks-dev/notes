plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'maven-publish'
}

group = 'com.apps'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java

			versionMapping {
				usage('java-api') {
					fromResolutionOf('runtimeClasspath')
				}
				usage('java-runtime') {
					fromResolutionResult()
				}
			}
		}
	}
}

// ✅ Dynamically add repository after the publishing block
def repoUrl = System.getenv("CODEARTIFACT_URL")
def token = System.getenv("AWS_CODEARTIFACT_AUTH_TOKEN")

if (repoUrl && token) {
	publishing.repositories {
		maven {
			url = uri(repoUrl)
			credentials {
				username = "aws"
				password = token
			}
		}
	}
} else {
	println "❌ CODEARTIFACT_URL or AWS_CODEARTIFACT_AUTH_TOKEN is not set. Skipping remote publish repository config."
}


tasks.named('test') {
	useJUnitPlatform()
}
